// TESTMEOUTYOU
.INTEL_SYNTAX NOPREFIX
.GLOBAL _START

// DECLARE CONST VALUES
.SECTION .DATA
// SYSCALL NUMBERS
.EQU SYS_OPEN, 2
.EQU SYS_CLOSE, 3
.EQU SYS_READ, 0
.EQU SYS_WRITE, 1
.EQU SYS_EXIT, 60

// READ VALUE
.EQU O_RDONLY, 0
.EQU O_WRONLY_TRUNC, 01101

// STANDARD FILE DESCRIPTORS
.EQU STDIN, 0
.EQU STDOUT, 1 
.EQU STDERR, 2 

.EQU END_OF_FILE, 0

.EQU NUMBER_OF_ARGS, 2

// DECLARE BUFFER DATA
.SECTION .BSS
.EQU BUFFER_SIZE, 500 
.LCOMM BUFFER_DATA, BUFFER_SIZE

.SECTION .TEXT

// STACK POSITIONS
.EQU ST_SIZE_RESERVE, 16
.EQU ST_FD_IN, -8
.EQU ST_FD_OUT, -16
.EQU ST_ARGC, 0
.EQU ST_ARGV_0, 8
.EQU ST_ARGV_1, 16 
.EQU ST_ARGV_2, 24 

_START:
  MOV RBP, RSP
  SUB RSP, ST_SIZE_RESERVE 

OPEN_FILES:
  OPEN_FD_IN:
    MOV RAX, SYS_OPEN
    MOV RDI, [RBP+ST_ARGV_1]
    MOV RSI, O_RDONLY
    MOV RDX, 0
    SYSCALL

  STORE_FD_IN:
    MOV [RBP+ST_FD_IN], RAX

  OPEN_FD_OUT:
    MOV RAX, SYS_OPEN
    MOV RDI, [RBP+ST_ARGV_2]
    MOV RSI, O_WRONLY_TRUNC
    MOV RDX, 00666
    SYSCALL

  STORE_FD_OUT:
    MOV [RBP+ST_FD_OUT], RAX

READ_LOOP_BEGIN:
  MOV RAX, SYS_READ
  MOV RDI, [RBP+ST_FD_IN]
  LEA RSI, [BUFFER_DATA]
  MOV RDX, BUFFER_SIZE
  SYSCALL

  CMP RAX, END_OF_FILE
  JLE END_LOOP

CONTINUE_READ_LOOP:
  PUSH RAX
  CALL CONVERT_TO_UPPER

  POP RAX

  MOV RDX, RAX
  MOV RDI, [RBP+ST_FD_OUT]
  LEA RSI, [BUFFER_DATA]
  MOV RAX, SYS_WRITE
  SYSCALL
  JMP READ_LOOP_BEGIN

END_LOOP:
  MOV RAX, SYS_CLOSE
  MOV RDI, [RBP+ST_FD_OUT]
  SYSCALL

  MOV RAX, SYS_CLOSE
  MOV RDI, [RBP+ST_FD_IN]
  SYSCALL

  MOV RDI, 1 
  MOV RAX, SYS_EXIT
  SYSCALL

.EQU LOWER_A, 'A'
.EQU LOWER_Z, 'Z'
.EQU CONVERSION_FACTOR, 'A' - 'A'

.EQU ST_BUFFER_LEN, 16

CONVERT_TO_UPPER:
  PUSH RBP
  MOV RBP, RSP

  MOV RBX, [RBP+ST_BUFFER_LEN]
  MOV RDI, 0

  CMP RBX, 0
  JE END_CONVERT_LOOP

CONVERT_LOOP:
  MOV CL, [BUFFER_DATA+RDI]
  
  CMP CL, LOWER_A
  JL NEXT_BYTE
  CMP CL, LOWER_Z
  JG NEXT_BYTE

  ADD CL, CONVERSION_FACTOR
  MOV [BUFFER_DATA+RDI], CL

NEXT_BYTE:
  INC RDI
  CMP RDI, RBX
  JNE CONVERT_LOOP

END_CONVERT_LOOP:
  MOV RSP, RBP
  POP RBP
  RET
